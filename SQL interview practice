-------------------------------------------------------------------------
Day - 1 (9 oct)
-------------------------------------------------------------------------
1. HackerRank- Students and Grades
    with cte as (
    select s.Name as name, g.Grade as grade, s.Marks as marks
    from Students s
    left join Grades g
    on s.Marks between g.Min_Mark and g.Max_Mark
    order by g.Grade desc, s.Name)
    select (case when grade>=8 then name else null end), grade,marks
    from cte;
-------------------------------------------------------------------------
2. HackerRank- Ron's Wand 
    select w.id, wp.age, w.coins_needed, w.power 
    from Wands w
    left join Wands_Property wp on w.code = wp.code
    where wp.is_evil = 0
    and w.coins_needed = (select min(w1.coins_needed) from Wands w1 
    inner join Wands_Property wp1 
    on w1.code = wp1.code where w.power = w1.power and wp.age=wp1.age)
    order by w.power desc, wp.age desc;
-------------------------------------------------------------------------
3. HackerRank- Binary Node
    select n,(
    case 
    when p is null then 'Root'
    when n in (select distinct p from BST) then 'Inner'
    else 'Leaf'
    end)
    from BST
    order by n;
-------------------------------------------------------------------------
4. HackerRank - New Companies
    select c.company_code, c.founder, count(distinct em.lead_manager_code), count(distinct em.senior_manager_code),count(distinct em.manager_code), count(distinct em.employee_code)
    from Company c
    left join Employee em on c.company_code = em.company_code
    group by c.company_code,c.founder
    order by c.company_code;
-------------------------------------------------------------------------
5. HackerRank - Weather Observation 20
    with cte as 
    (
    select LAT_N,
    row_number() over(order by LAT_N asc) as a1,
    row_number() over(order by LAT_N desc) as a2
    from STATION)
    
    select round(avg(LAT_N),4) 
    from cte where a1=a2 or a1 = a2+1 or a1+1 =a2;
-------------------------------------------------------------------------
6. HackerRank - Contest Leaderboard
        select h.hacker_id, h.name, sum(max_score) as tot from
        (select hacker_id,challenge_id,max(score) as max_score from Submissions group by hacker_id,challenge_id) as s
        join hackers h on s.hacker_id=h.hacker_id 
        group by hacker_id,h.name
        having tot>0
        order by tot desc,hacker_id;
-------------------------------------------------------------------------
7. HackerRank - SQL Project Planning?? Challenges?? Top Competitors??
-------------------------------------------------------------------------
8. DataLemur - Uber 3rd Transactions
        with uber as (
        select *,
        row_number() OVER(PARTITION BY user_id ORDER BY transaction_date) as rn
        from transactions)
        
        SELECT user_id,spend, transaction_date
        FROM uber
        where rn =3
        ORDER BY user_id,transaction_date;
-------------------------------------------------------------------------
9. Data Lemur - FAANG 2nd highest sal
        /*select max(salary) as second_highest_salary
        from employee
        where salary not in (select max(salary) from employee);*/
        
        with cte as (
        select *,
        dense_rank() OVER( ORDER BY salary DESC) as sec_high
        from employee)
        
        select salary as second_highest_salary
        from cte 
        where sec_high =2;
-------------------------------------------------------------------------
Day - 2 (10 Oct)
-------------------------------------------------------------------------
10. LeetCode - Manager with 5 direct reports
        select name
        from Employee
        where id in 
        (select managerId from Employee group by managerId having count(*)>=5);
-------------------------------------------------------------------------
11. LeetCode- Confirmation Rate (discussion)
        select s.user_id, round(avg(if(c.action = 'confirmed',1,0)),2) as confirmation_rate 
        from Signups s
        left join Confirmations c on s.user_id = c.user_id 
        group by s.user_id;
-------------------------------------------------------------------------
12. LeetCode - Monhly Transactions I
        select left(trans_date,7) as month, country, count(state) as trans_count, sum(state ='approved') as approved_count,
        sum(amount) as trans_total_amount, sum((state='approved')*amount) as approved_total_amount
        from Transactions
        group by month, country;
-------------------------------------------------------------------------
13. LeetCode - Immediate Food Delivery II (discussion)
        select round(avg(order_date = customer_pref_delivery_date)*100,2) as immediate_percentage
        from Delivery
        where (customer_id, order_date) in (
        select customer_id, min(order_date)
        from Delivery
        group by customer_id
);
-------------------------------------------------------------------------
14. Data Lemur - Top 3 Salaries
        WITH ranked_salary AS (
          SELECT name, salary,department_id,
            DENSE_RANK() OVER (PARTITION BY department_id ORDER BY salary DESC) AS ranking
          FROM employee
        )
        
        SELECT 
          d.department_name,
          s.name,
          s.salary
        FROM ranked_salary AS s
        INNER JOIN department AS d
          ON s.department_id = d.department_id
        WHERE s.ranking <= 3
        ORDER BY d.department_name ASC, s.salary DESC, s.name ASC;
        

-------------------------------------------------------------------------
15. LeetCode - Customers bought all products
        select customer_id
        from Customer
        group by customer_id
        having count(distinct product_key) = (select count(product_key) from Product);
-------------------------------------------------------------------------
    16. LeetCode - Last person to fit in bus
    with cte as (
        select person_name, sum(weight) over(order by turn ) as total_weight
        from Queue
    )
    
    select person_name
    from cte
    where total_weight <= 1000 
    order by total_weight desc
    limit 1;
-------------------------------------------------------------------------

-------------------------------------------------------------------------
-------------------------------------------------------------------------

